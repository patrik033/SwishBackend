// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwishBackend.StoreItems.Data;

#nullable disable

namespace SwishBackend.StoreItems.Migrations
{
    [DbContext(typeof(StoreItemsDbContext))]
    partial class StoreItemsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SwishBackend.StoreItems.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("ProductCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SwishBackend.StoreItems.Models.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f8fad5b-d9cb-469f-a165-70867728950e"),
                            CategoryName = "Painting"
                        },
                        new
                        {
                            Id = new Guid("bb2ea796-c92a-4a02-8857-0763f7f4e80a"),
                            CategoryName = "Cars"
                        });
                });

            modelBuilder.Entity("SwishBackend.StoreItems.Models.Car", b =>
                {
                    b.HasBaseType("SwishBackend.StoreItems.Models.Product");

                    b.Property<int>("HorsePower")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Car");

                    b.HasData(
                        new
                        {
                            Id = new Guid("958ff01c-8cd0-4872-897e-9cae8f9ea46b"),
                            Image = "car_image_1.jpg",
                            Name = "Car 1",
                            Price = 30000m,
                            ProductCategoryId = new Guid("bb2ea796-c92a-4a02-8857-0763f7f4e80a"),
                            Stock = 5,
                            Type = 1,
                            HorsePower = 200,
                            Model = "Model X"
                        },
                        new
                        {
                            Id = new Guid("acc2ea2b-38a2-41fb-a779-85cad19508bf"),
                            Image = "car_image_2.jpg",
                            Name = "Car 2",
                            Price = 25000m,
                            ProductCategoryId = new Guid("bb2ea796-c92a-4a02-8857-0763f7f4e80a"),
                            Stock = 8,
                            Type = 1,
                            HorsePower = 150,
                            Model = "Model Y"
                        });
                });

            modelBuilder.Entity("SwishBackend.StoreItems.Models.Painting", b =>
                {
                    b.HasBaseType("SwishBackend.StoreItems.Models.Product");

                    b.Property<string>("PainterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Painting");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59c7b4e5-791b-46af-aba8-6cc682dbd26d"),
                            Image = "https://images.pexels.com/photos/1266808/pexels-photo-1266808.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",
                            Name = "Test Painging 1",
                            Price = 100m,
                            ProductCategoryId = new Guid("0f8fad5b-d9cb-469f-a165-70867728950e"),
                            Stock = 10,
                            Type = 0,
                            PainterName = "Test 1"
                        },
                        new
                        {
                            Id = new Guid("58e36234-0579-4d71-99d1-3d73810bf1b3"),
                            Image = "https://images.pexels.com/photos/1266808/pexels-photo-1266808.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",
                            Name = "Test Painging 2",
                            Price = 110m,
                            ProductCategoryId = new Guid("0f8fad5b-d9cb-469f-a165-70867728950e"),
                            Stock = 16,
                            Type = 0,
                            PainterName = "Test 2"
                        },
                        new
                        {
                            Id = new Guid("6c1f4831-4f3d-413a-b38a-0c9173d0892b"),
                            Image = "https://images.pexels.com/photos/1266808/pexels-photo-1266808.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",
                            Name = "Test Painging 3",
                            Price = 120m,
                            ProductCategoryId = new Guid("0f8fad5b-d9cb-469f-a165-70867728950e"),
                            Stock = 12,
                            Type = 0,
                            PainterName = "Test 3"
                        },
                        new
                        {
                            Id = new Guid("7f4e4ab6-11ce-41d2-b178-2c768661e529"),
                            Image = "https://images.pexels.com/photos/1266808/pexels-photo-1266808.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",
                            Name = "Test Painging 4",
                            Price = 100m,
                            ProductCategoryId = new Guid("0f8fad5b-d9cb-469f-a165-70867728950e"),
                            Stock = 5,
                            Type = 0,
                            PainterName = "Test 4"
                        },
                        new
                        {
                            Id = new Guid("13720c78-0503-45f9-b72d-6d55a07af9ed"),
                            Image = "https://images.pexels.com/photos/1266808/pexels-photo-1266808.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",
                            Name = "Test Painging 5",
                            Price = 200m,
                            ProductCategoryId = new Guid("0f8fad5b-d9cb-469f-a165-70867728950e"),
                            Stock = 12,
                            Type = 0,
                            PainterName = "Test 5"
                        },
                        new
                        {
                            Id = new Guid("726fb132-c015-4e23-95ba-62d38c9941b8"),
                            Image = "https://images.pexels.com/photos/1266808/pexels-photo-1266808.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",
                            Name = "Test Painging 6",
                            Price = 100m,
                            ProductCategoryId = new Guid("0f8fad5b-d9cb-469f-a165-70867728950e"),
                            Stock = 10,
                            Type = 0,
                            PainterName = "Test 6"
                        });
                });

            modelBuilder.Entity("SwishBackend.StoreItems.Models.Product", b =>
                {
                    b.HasOne("SwishBackend.StoreItems.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("SwishBackend.StoreItems.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
